apply plugin: 'com.android.application'

android {
    signingConfigs {
        release {
            storeFile file('../androidx.keystore')
            storePassword 'androidx'
            keyAlias = 'androidx'
            keyPassword 'androidx'
        }
    }
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "com.androidx.dushu"
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        // Specifies the application ID for the test APK.
        testApplicationId "com.androidx.test.dushu"
        // Specifies the fully-qualified class name of the test instrumentation runner.
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
        // If set to 'true', enables the instrumentation class to start and stop profiling.
        // If set to false (default), profiling occurs the entire time the instrumentation
        // class is running.
        testHandleProfiling true
        // If set to 'true', indicates that the Android system should run the instrumentation
        // class as a functional test. The default value is 'false'
        testFunctionalTest true

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }
        multiDexEnabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    dataBinding {
        enabled = true
    }

    viewBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':lib_base')
    implementation 'androidx.cardview:cardview:1.0.0'

    testImplementation 'junit:junit:4.13'

    // Core library
    androidTestImplementation 'androidx.test:core:1.2.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:truth:1.2.0'
    androidTestImplementation 'com.google.truth:truth:0.42'

    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.2.0'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.2.0'

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'
    api 'com.squareup.okhttp3:okhttp:3.14.9'
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:converter-gson:2.3.0'
//    api 'com.orhanobut:logger:2.2.0'
}

import groovy.json.JsonSlurper
import okhttp3.OkHttpClient
import okhttp3.Request
import okhttp3.ResponseBody
import retrofit2.Call
import retrofit2.Retrofit
import retrofit2.converter.gson.GsonConverterFactory
import retrofit2.http.GET
import retrofit2.http.Query

interface GitHubService {
    @GET("users/{user}/repos")
    Call<String> listRepos(@Path("user") String user);

//    http://api.m.mtime.cn/PageSubArea/TrailerList.api
//    https://www.wanandroid.com/project/list/1/json?cid=1
    @GET("project/list/1/json")
    Call<ResponseBody> getString(@Query("cid") int cid);
}

class LoginBean {
    /**
     * login : Guolei1130
     * id : 12966526
     * node_id : MDQ6VXNlcjEyOTY2NTI2
     * avatar_url : https://avatars.githubusercontent.com/u/12966526?v=4
     * gravatar_id :
     * url : https://api.github.com/users/Guolei1130
     * html_url : https://github.com/Guolei1130
     * followers_url : https://api.github.com/users/Guolei1130/followers
     * following_url : https://api.github.com/users/Guolei1130/following{/other_user}* gists_url : https://api.github.com/users/Guolei1130/gists{/gist_id}* starred_url : https://api.github.com/users/Guolei1130/starred{/owner}{/repo}* subscriptions_url : https://api.github.com/users/Guolei1130/subscriptions
     * organizations_url : https://api.github.com/users/Guolei1130/orgs
     * repos_url : https://api.github.com/users/Guolei1130/repos
     * events_url : https://api.github.com/users/Guolei1130/events{/privacy}* received_events_url : https://api.github.com/users/Guolei1130/received_events
     * type : User
     * site_admin : false
     * name : 全世界_Coder
     * company : ByteDance
     * blog : guolei1130.github.io
     * location : Beijing,China
     * email : null
     * hireable : null
     * bio : 我好方啊
     * twitter_username : null
     * public_repos : 146
     * public_gists : 0
     * followers : 156
     * following : 135
     * created_at : 2015-06-19T12:10:51Z
     * updated_at : 2021-05-21T09:35:22Z
     */

    private String login;
    private int id;
    private String node_id;
    private String avatar_url;
    private String gravatar_id;
    private String url;
    private String html_url;
    private String followers_url;
    private String following_url;
    private String gists_url;
    private String starred_url;
    private String subscriptions_url;
    private String organizations_url;
    private String repos_url;
    private String events_url;
    private String received_events_url;
    private String type;
    private boolean site_admin;
    private String name;
    private String company;
    private String blog;
    private String location;
    private Object email;
    private Object hireable;
    private String bio;
    private Object twitter_username;
    private int public_repos;
    private int public_gists;
    private int followers;
    private int following;
    private String created_at;
    private String updated_at;

    public String getLogin() { return login; }

    public void setLogin(String login) { this.login = login; }

    public int getId() { return id; }

    public void setId(int id) { this.id = id; }

    public String getNode_id() { return node_id; }

    public void setNode_id(String node_id) { this.node_id = node_id; }

    public String getAvatar_url() { return avatar_url; }

    public void setAvatar_url(String avatar_url) { this.avatar_url = avatar_url; }

    public String getGravatar_id() { return gravatar_id; }

    public void setGravatar_id(String gravatar_id) { this.gravatar_id = gravatar_id; }

    public String getUrl() { return url; }

    public void setUrl(String url) { this.url = url; }

    public String getHtml_url() { return html_url; }

    public void setHtml_url(String html_url) { this.html_url = html_url; }

    public String getFollowers_url() { return followers_url; }

    public void setFollowers_url(String followers_url) { this.followers_url = followers_url; }

    public String getFollowing_url() { return following_url; }

    public void setFollowing_url(String following_url) { this.following_url = following_url; }

    public String getGists_url() { return gists_url; }

    public void setGists_url(String gists_url) { this.gists_url = gists_url; }

    public String getStarred_url() { return starred_url; }

    public void setStarred_url(String starred_url) { this.starred_url = starred_url; }

    public String getSubscriptions_url() { return subscriptions_url; }

    public void setSubscriptions_url(String subscriptions_url) { this.subscriptions_url = subscriptions_url; }

    public String getOrganizations_url() { return organizations_url; }

    public void setOrganizations_url(String organizations_url) { this.organizations_url = organizations_url; }

    public String getRepos_url() { return repos_url; }

    public void setRepos_url(String repos_url) { this.repos_url = repos_url; }

    public String getEvents_url() { return events_url; }

    public void setEvents_url(String events_url) { this.events_url = events_url; }

    public String getReceived_events_url() { return received_events_url; }

    public void setReceived_events_url(String received_events_url) { this.received_events_url = received_events_url; }

    public String getType() { return type; }

    public void setType(String type) { this.type = type; }

    public boolean isSite_admin() { return site_admin; }

    public void setSite_admin(boolean site_admin) { this.site_admin = site_admin; }

    public String getName() { return name; }

    public void setName(String name) { this.name = name; }

    public String getCompany() { return company; }

    public void setCompany(String company) { this.company = company; }

    public String getBlog() { return blog; }

    public void setBlog(String blog) { this.blog = blog; }

    public String getLocation() { return location; }

    public void setLocation(String location) { this.location = location; }

    public Object getEmail() { return email; }

    public void setEmail(Object email) { this.email = email; }

    public Object getHireable() { return hireable; }

    public void setHireable(Object hireable) { this.hireable = hireable; }

    public String getBio() { return bio; }

    public void setBio(String bio) { this.bio = bio; }

    public Object getTwitter_username() { return twitter_username; }

    public void setTwitter_username(Object twitter_username) { this.twitter_username = twitter_username; }

    public int getPublic_repos() { return public_repos; }

    public void setPublic_repos(int public_repos) { this.public_repos = public_repos; }

    public int getPublic_gists() { return public_gists; }

    public void setPublic_gists(int public_gists) { this.public_gists = public_gists; }

    public int getFollowers() { return followers; }

    public void setFollowers(int followers) { this.followers = followers; }

    public int getFollowing() { return following; }

    public void setFollowing(int following) { this.following = following; }

    public String getCreated_at() { return created_at; }

    public void setCreated_at(String created_at) { this.created_at = created_at; }

    public String getUpdated_at() { return updated_at; }

    public void setUpdated_at(String updated_at) { this.updated_at = updated_at; }

    @Override
    public String toString() {
        return "LoginBean{" +
                "login='" + login + '\'' +
                ", id=" + id +
                ", node_id='" + node_id + '\'' +
                ", avatar_url='" + avatar_url + '\'' +
                ", gravatar_id='" + gravatar_id + '\'' +
                ", url='" + url + '\'' +
                ", html_url='" + html_url + '\'' +
                ", followers_url='" + followers_url + '\'' +
                ", following_url='" + following_url + '\'' +
                ", gists_url='" + gists_url + '\'' +
                ", starred_url='" + starred_url + '\'' +
                ", subscriptions_url='" + subscriptions_url + '\'' +
                ", organizations_url='" + organizations_url + '\'' +
                ", repos_url='" + repos_url + '\'' +
                ", events_url='" + events_url + '\'' +
                ", received_events_url='" + received_events_url + '\'' +
                ", type='" + type + '\'' +
                ", site_admin=" + site_admin +
                ", name='" + name + '\'' +
                ", company='" + company + '\'' +
                ", blog='" + blog + '\'' +
                ", location='" + location + '\'' +
                ", email=" + email +
                ", hireable=" + hireable +
                ", bio='" + bio + '\'' +
                ", twitter_username=" + twitter_username +
                ", public_repos=" + public_repos +
                ", public_gists=" + public_gists +
                ", followers=" + followers +
                ", following=" + following +
                ", created_at='" + created_at + '\'' +
                ", updated_at='" + updated_at + '\'' +
                '}';
    }
}

class JsonBean {

    /**
     * data : {"curPage":1,"datas":[{"apkLink":"","audit":1,"author":"fuusy","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"该项目主要以组件化+Jetpack+MVVM为架构，使用Kotlin语言，集合了更新的Jetpack组件，如Navigation、Paging3、Room等，另外还加上了依赖注入框架Koin和图片加载框架Coin。\r\n网络请求部分使用OkHttp+Retrofit，配合Kotlin的协程，完成了对Retrofit和协程的请求封装，结合LoadSir进行状态切换管理\r\n\r\n","descMd":"","envelopePic":"https://www.wanandroid.com/resources/image/pc/default_project_img.jpg","fresh":true,"host":"","id":18414,"link":"https://www.wanandroid.com/blog/show/3009","niceDate":"11小时前","niceShareDate":"11小时前","origin":"","prefix":"","projectLink":"https://github.com/fuusy/wanandroid_jetpack_kt","publishTime":1621868542000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1621868542000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"组件化+Jetpack+MVVM项目实战，涉及Jetpack相关组件，协程+Retrofit，Paging3+Room等","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"miaowmiaow","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"采用 Kotlin 语言编写，单Activity多Fragment，MVVM + ViewModel + LiveData + Retrofit + 协程 + ViewBinding等架构设计的项目，项目结构清晰，代码简介优雅","descMd":"","envelopePic":"https://www.wanandroid.com/blogimgs/6d454437-1e59-4804-9f75-7255b0e816a9.png","fresh":false,"host":"","id":18320,"link":"https://www.wanandroid.com/blog/show/3005","niceDate":"2021-05-16 23:08","niceShareDate":"2021-05-16 23:08","origin":"","prefix":"","projectLink":"https://github.com/miaowmiaow/FragmentProject.git","publishTime":1621177682000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1621177682000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"可能是东半球更简洁的玩安卓客户端","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"SheHuan","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"基于 Vue2 + Vant 的移动版 玩Android 客户端","descMd":"","envelopePic":"https://www.wanandroid.com/blogimgs/70ff438b-ca4e-420e-86f1-53387271d012.png","fresh":false,"host":"","id":18251,"link":"https://www.wanandroid.com/blog/show/2998","niceDate":"2021-05-09 23:44","niceShareDate":"2021-05-09 23:44","origin":"","prefix":"","projectLink":"https://github.com/SheHuan/wanandroid-vue","publishTime":1620575078000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1620575078000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"基于 Vue2 + Vant 的移动版 玩Android 客户端","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"Theoneee","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"码云地址：https://gitee.com/theoneee/the-base-mvvm","descMd":"","envelopePic":"https://www.wanandroid.com/blogimgs/ae8bea90-df9c-42db-a6ef-2a0ef1c93120.png","fresh":false,"host":"","id":17828,"link":"https://www.wanandroid.com/blog/show/2976","niceDate":"2021-04-01 22:20","niceShareDate":"2021-04-01 22:20","origin":"","prefix":"","projectLink":"https://github.com/Theoneee/TheBase-MVVM","publishTime":1617286820000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1617286820000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"QMUI+Jetpack组件搭建的一个基础框架写的一个玩安卓App","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"zhujiang521","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"打造 Compose 版本的 Banner\r\n","descMd":"","envelopePic":"https://www.wanandroid.com/resources/image/pc/default_project_img.jpg","fresh":false,"host":"","id":17805,"link":"https://www.wanandroid.com/blog/show/2972","niceDate":"2021-03-30 23:22","niceShareDate":"2021-03-30 23:22","origin":"","prefix":"","projectLink":"https://github.com/zhujiang521/Banner","publishTime":1617117768000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1617117768000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"打造 Compose 版本的 Banner","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"yechaoa","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"玩安卓的flutter版本，首先非常感谢鸿洋提供的api，然后就是这个项目目前还在完善中，但是常用的widget 、功能也基本都用到了，没用到的后续也会强行用到的 /huaji。","descMd":"","envelopePic":"https://www.wanandroid.com/blogimgs/c10a298f-818f-4237-8bfd-8424f6d0de3e.png","fresh":false,"host":"","id":17715,"link":"https://www.wanandroid.com/blog/show/2968","niceDate":"2021-03-22 23:59","niceShareDate":"2021-03-22 23:59","origin":"","prefix":"","projectLink":"https://github.com/yechaoa/wanandroid_flutter","publishTime":1616428756000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1616428756000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"Flutter版玩安卓","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"SusionSuc","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"1. API简单易用\r\n2. 支持长图\r\n3. 缩放手势、拖拽退出\r\n4. 稳定、几乎无crash","descMd":"","envelopePic":"https://www.wanandroid.com/blogimgs/422c7435-1328-461f-9552-c43326263c77.png","fresh":false,"host":"","id":17714,"link":"https://www.wanandroid.com/blog/show/2967","niceDate":"2021-03-22 23:59","niceShareDate":"2021-03-22 23:59","origin":"","prefix":"","projectLink":"https://github.com/SusionSuc/DraggableImageViewer","publishTime":1616428740000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1616428740000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"仿微信、B站大图浏览、拖拽退出。","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"leavesC","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"Basic Flutter apps, for flutter devs.  一个帮助开发者加深了解 Flutter 的项目，提供了 N 多个常用 Widget 和自定义 Widget 的使用及实现方法，涵盖了系统 Widget 、布局容器、动画、高阶功能、自定义 Widget 等内容，正在密集更新中&hellip;&hellip;","descMd":"","envelopePic":"https://www.wanandroid.com/resources/image/pc/default_project_img.jpg","fresh":false,"host":"","id":17653,"link":"https://www.wanandroid.com/blog/show/2961","niceDate":"2021-03-16 23:58","niceShareDate":"2021-03-16 23:56","origin":"","prefix":"","projectLink":"https://github.com/leavesC/flutter_do","publishTime":1615910313000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1615910217000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"一个帮助开发者加深了解 Flutter 的项目","type":0,"userId":-1,"visible":0,"zan":0},{"apkLink":"","audit":1,"author":"cdalwyn","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"基于Mvvm模式集成谷歌官方推荐的JetPack组件库LiveData+ViewModel+DataBinding，以ARouter为组件路由，\r\n集成了登录注册、收藏、分享、搜索、浏览热门博客和项目、添加Todo待办功能等，Koin实现依赖注入、Retrofit+Rxjava2组合实现网络请求、腾讯MMKV实现高性能缓存等","descMd":"","envelopePic":"https://www.wanandroid.com/resources/image/pc/default_project_img.jpg","fresh":false,"host":"","id":17630,"link":"https://www.wanandroid.com/blog/show/2960","niceDate":"2021-03-15 00:47","niceShareDate":"2021-03-15 00:47","origin":"","prefix":"","projectLink":"https://github.com/cdalwyn/mvvmcomponent","publishTime":1615740436000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1615740436000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"Kotlin开发的 Jetpack+Mvvm+组件化 玩安卓客户端","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"kingofglory","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"EasyPay(易支付)集成并高度封装了Android平台的微信支付，支付宝支付以银联支付。使用此库，开发者可以使用简单轻松方便的 Api 实现支付功能，大量节省集成配置时间。","descMd":"","envelopePic":"https://www.wanandroid.com/blogimgs/1cbc8f91-6610-4488-9967-e06af2bd8fb6.png","fresh":false,"host":"","id":17526,"link":"https://www.wanandroid.com/blog/show/2954","niceDate":"2021-03-04 22:40","niceShareDate":"2021-03-04 22:40","origin":"","prefix":"","projectLink":"https://github.com/kingofglory/EasyPay","publishTime":1614868803000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1614868803000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"EasyPay v2.0.0正式发布----让Android支付功能集成极限提速","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"laiyuling424","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"在学习了kotlin之后的一个练手项目，项目涉及到了一些jetpack的东西，实现了wanandroid网页上的首页，包含顶部轮播图和数据列表，常用网站，项目，体系，导航，帐号登录，搜索，包含热搜和搜索历史，公众号功能。","descMd":"","envelopePic":"https://www.wanandroid.com/blogimgs/b719e16a-6a0c-40e3-92f2-3f3fbddaee2f.png","fresh":false,"host":"","id":17427,"link":"https://www.wanandroid.com/blog/show/2945","niceDate":"2021-02-25 22:16","niceShareDate":"2021-02-25 22:16","origin":"","prefix":"","projectLink":"https://github.com/laiyuling424/lylproject","publishTime":1614262610000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1614262610000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"mvvm的wanandroid客户端","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"gdutxiaoxu","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"锚点任务，可以用来解决多线程加载任务依赖的问题。常见的，比如 Android 启动优化，通常会进行多线程异步加载。\r\n\r\n它的实现原理是通过有向无环图的拓扑排序解决的。","descMd":"","envelopePic":"https://wanandroid.com/resources/image/pc/default_project_img.jpg","fresh":false,"host":"","id":17412,"link":"https://www.wanandroid.com/blog/show/2944","niceDate":"2021-02-24 23:11","niceShareDate":"2021-02-24 23:11","origin":"","prefix":"","projectLink":"https://github.com/gdutxiaoxu/AnchorTask","publishTime":1614179475000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1614179475000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"AnchorTask - Android 启动优化 ","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"yetel","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"EasyChat是一款开源的社交类的App。主要包含消息、好友、群组等相关的IM核心功能。部分界面参照了QQ、微信等相关社交APP。EasyChat APP采用MVVM模式构建。","descMd":"","envelopePic":"https://www.wanandroid.com/blogimgs/2efab4c3-4500-4980-ba31-0ca14098c6e0.png","fresh":false,"host":"","id":17387,"link":"https://www.wanandroid.com/blog/show/2943","niceDate":"2021-02-23 23:27","niceShareDate":"2021-02-23 23:27","origin":"","prefix":"","projectLink":"https://github.com/yetel/EasyChatAndroidClient","publishTime":1614094021000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1614094021000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"EasyChat是一款开源的社交类的App。主要包含消息、好友、群组等相关的IM核心功能","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"mouxuefei","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"kotlin版本组件化+mvvm项目架构","descMd":"","envelopePic":"https://wanandroid.com/resources/image/pc/default_project_img.jpg","fresh":false,"host":"","id":17371,"link":"https://www.wanandroid.com/blog/show/2941","niceDate":"2021-02-22 23:26","niceShareDate":"2021-02-22 23:26","origin":"","prefix":"","projectLink":"https://github.com/mouxuefei/MvvmModulePatternSample","publishTime":1614007611000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1614007611000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"kotlin版本组件化+mvvm项目架构","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"Taonce","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"一款很简单的Flutter的学习项目，适合新手去熟悉Flutter的组件和Dart语法。","descMd":"","envelopePic":"https://www.wanandroid.com/blogimgs/6e207dde-1575-4a4a-be49-bd07777a5650.png","fresh":false,"host":"","id":17327,"link":"https://www.wanandroid.com/blog/show/2938","niceDate":"2021-02-19 23:04","niceShareDate":"2021-02-19 23:04","origin":"","prefix":"","projectLink":"https://github.com/Taonce/Gank_Flutter","publishTime":1613747086000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1613747086000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"Flutter练手项目：Gank_Flutter","type":0,"userId":-1,"visible":1,"zan":0}],"offset":0,"over":false,"pageCount":18,"size":15,"total":259}* errorCode : 0
     * errorMsg :
     */

    private DataBean data;
    private int errorCode;
    private String errorMsg;

    public DataBean getData() {
        return data;
    }

    public void setData(DataBean data) {
        this.data = data;
    }

    public int getErrorCode() {
        return errorCode;
    }

    public void setErrorCode(int errorCode) {
        this.errorCode = errorCode;
    }

    public String getErrorMsg() {
        return errorMsg;
    }

    public void setErrorMsg(String errorMsg) {
        this.errorMsg = errorMsg;
    }

    public static class DataBean {
        /**
         * curPage : 1
         * datas : [{"apkLink":"","audit":1,"author":"fuusy","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"该项目主要以组件化+Jetpack+MVVM为架构，使用Kotlin语言，集合了更新的Jetpack组件，如Navigation、Paging3、Room等，另外还加上了依赖注入框架Koin和图片加载框架Coin。\r\n网络请求部分使用OkHttp+Retrofit，配合Kotlin的协程，完成了对Retrofit和协程的请求封装，结合LoadSir进行状态切换管理\r\n\r\n","descMd":"","envelopePic":"https://www.wanandroid.com/resources/image/pc/default_project_img.jpg","fresh":true,"host":"","id":18414,"link":"https://www.wanandroid.com/blog/show/3009","niceDate":"11小时前","niceShareDate":"11小时前","origin":"","prefix":"","projectLink":"https://github.com/fuusy/wanandroid_jetpack_kt","publishTime":1621868542000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1621868542000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"组件化+Jetpack+MVVM项目实战，涉及Jetpack相关组件，协程+Retrofit，Paging3+Room等","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"miaowmiaow","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"采用 Kotlin 语言编写，单Activity多Fragment，MVVM + ViewModel + LiveData + Retrofit + 协程 + ViewBinding等架构设计的项目，项目结构清晰，代码简介优雅","descMd":"","envelopePic":"https://www.wanandroid.com/blogimgs/6d454437-1e59-4804-9f75-7255b0e816a9.png","fresh":false,"host":"","id":18320,"link":"https://www.wanandroid.com/blog/show/3005","niceDate":"2021-05-16 23:08","niceShareDate":"2021-05-16 23:08","origin":"","prefix":"","projectLink":"https://github.com/miaowmiaow/FragmentProject.git","publishTime":1621177682000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1621177682000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"可能是东半球更简洁的玩安卓客户端","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"SheHuan","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"基于 Vue2 + Vant 的移动版 玩Android 客户端","descMd":"","envelopePic":"https://www.wanandroid.com/blogimgs/70ff438b-ca4e-420e-86f1-53387271d012.png","fresh":false,"host":"","id":18251,"link":"https://www.wanandroid.com/blog/show/2998","niceDate":"2021-05-09 23:44","niceShareDate":"2021-05-09 23:44","origin":"","prefix":"","projectLink":"https://github.com/SheHuan/wanandroid-vue","publishTime":1620575078000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1620575078000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"基于 Vue2 + Vant 的移动版 玩Android 客户端","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"Theoneee","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"码云地址：https://gitee.com/theoneee/the-base-mvvm","descMd":"","envelopePic":"https://www.wanandroid.com/blogimgs/ae8bea90-df9c-42db-a6ef-2a0ef1c93120.png","fresh":false,"host":"","id":17828,"link":"https://www.wanandroid.com/blog/show/2976","niceDate":"2021-04-01 22:20","niceShareDate":"2021-04-01 22:20","origin":"","prefix":"","projectLink":"https://github.com/Theoneee/TheBase-MVVM","publishTime":1617286820000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1617286820000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"QMUI+Jetpack组件搭建的一个基础框架写的一个玩安卓App","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"zhujiang521","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"打造 Compose 版本的 Banner\r\n","descMd":"","envelopePic":"https://www.wanandroid.com/resources/image/pc/default_project_img.jpg","fresh":false,"host":"","id":17805,"link":"https://www.wanandroid.com/blog/show/2972","niceDate":"2021-03-30 23:22","niceShareDate":"2021-03-30 23:22","origin":"","prefix":"","projectLink":"https://github.com/zhujiang521/Banner","publishTime":1617117768000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1617117768000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"打造 Compose 版本的 Banner","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"yechaoa","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"玩安卓的flutter版本，首先非常感谢鸿洋提供的api，然后就是这个项目目前还在完善中，但是常用的widget 、功能也基本都用到了，没用到的后续也会强行用到的 /huaji。","descMd":"","envelopePic":"https://www.wanandroid.com/blogimgs/c10a298f-818f-4237-8bfd-8424f6d0de3e.png","fresh":false,"host":"","id":17715,"link":"https://www.wanandroid.com/blog/show/2968","niceDate":"2021-03-22 23:59","niceShareDate":"2021-03-22 23:59","origin":"","prefix":"","projectLink":"https://github.com/yechaoa/wanandroid_flutter","publishTime":1616428756000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1616428756000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"Flutter版玩安卓","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"SusionSuc","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"1. API简单易用\r\n2. 支持长图\r\n3. 缩放手势、拖拽退出\r\n4. 稳定、几乎无crash","descMd":"","envelopePic":"https://www.wanandroid.com/blogimgs/422c7435-1328-461f-9552-c43326263c77.png","fresh":false,"host":"","id":17714,"link":"https://www.wanandroid.com/blog/show/2967","niceDate":"2021-03-22 23:59","niceShareDate":"2021-03-22 23:59","origin":"","prefix":"","projectLink":"https://github.com/SusionSuc/DraggableImageViewer","publishTime":1616428740000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1616428740000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"仿微信、B站大图浏览、拖拽退出。","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"leavesC","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"Basic Flutter apps, for flutter devs.  一个帮助开发者加深了解 Flutter 的项目，提供了 N 多个常用 Widget 和自定义 Widget 的使用及实现方法，涵盖了系统 Widget 、布局容器、动画、高阶功能、自定义 Widget 等内容，正在密集更新中&hellip;&hellip;","descMd":"","envelopePic":"https://www.wanandroid.com/resources/image/pc/default_project_img.jpg","fresh":false,"host":"","id":17653,"link":"https://www.wanandroid.com/blog/show/2961","niceDate":"2021-03-16 23:58","niceShareDate":"2021-03-16 23:56","origin":"","prefix":"","projectLink":"https://github.com/leavesC/flutter_do","publishTime":1615910313000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1615910217000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"一个帮助开发者加深了解 Flutter 的项目","type":0,"userId":-1,"visible":0,"zan":0},{"apkLink":"","audit":1,"author":"cdalwyn","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"基于Mvvm模式集成谷歌官方推荐的JetPack组件库LiveData+ViewModel+DataBinding，以ARouter为组件路由，\r\n集成了登录注册、收藏、分享、搜索、浏览热门博客和项目、添加Todo待办功能等，Koin实现依赖注入、Retrofit+Rxjava2组合实现网络请求、腾讯MMKV实现高性能缓存等","descMd":"","envelopePic":"https://www.wanandroid.com/resources/image/pc/default_project_img.jpg","fresh":false,"host":"","id":17630,"link":"https://www.wanandroid.com/blog/show/2960","niceDate":"2021-03-15 00:47","niceShareDate":"2021-03-15 00:47","origin":"","prefix":"","projectLink":"https://github.com/cdalwyn/mvvmcomponent","publishTime":1615740436000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1615740436000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"Kotlin开发的 Jetpack+Mvvm+组件化 玩安卓客户端","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"kingofglory","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"EasyPay(易支付)集成并高度封装了Android平台的微信支付，支付宝支付以银联支付。使用此库，开发者可以使用简单轻松方便的 Api 实现支付功能，大量节省集成配置时间。","descMd":"","envelopePic":"https://www.wanandroid.com/blogimgs/1cbc8f91-6610-4488-9967-e06af2bd8fb6.png","fresh":false,"host":"","id":17526,"link":"https://www.wanandroid.com/blog/show/2954","niceDate":"2021-03-04 22:40","niceShareDate":"2021-03-04 22:40","origin":"","prefix":"","projectLink":"https://github.com/kingofglory/EasyPay","publishTime":1614868803000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1614868803000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"EasyPay v2.0.0正式发布----让Android支付功能集成极限提速","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"laiyuling424","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"在学习了kotlin之后的一个练手项目，项目涉及到了一些jetpack的东西，实现了wanandroid网页上的首页，包含顶部轮播图和数据列表，常用网站，项目，体系，导航，帐号登录，搜索，包含热搜和搜索历史，公众号功能。","descMd":"","envelopePic":"https://www.wanandroid.com/blogimgs/b719e16a-6a0c-40e3-92f2-3f3fbddaee2f.png","fresh":false,"host":"","id":17427,"link":"https://www.wanandroid.com/blog/show/2945","niceDate":"2021-02-25 22:16","niceShareDate":"2021-02-25 22:16","origin":"","prefix":"","projectLink":"https://github.com/laiyuling424/lylproject","publishTime":1614262610000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1614262610000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"mvvm的wanandroid客户端","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"gdutxiaoxu","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"锚点任务，可以用来解决多线程加载任务依赖的问题。常见的，比如 Android 启动优化，通常会进行多线程异步加载。\r\n\r\n它的实现原理是通过有向无环图的拓扑排序解决的。","descMd":"","envelopePic":"https://wanandroid.com/resources/image/pc/default_project_img.jpg","fresh":false,"host":"","id":17412,"link":"https://www.wanandroid.com/blog/show/2944","niceDate":"2021-02-24 23:11","niceShareDate":"2021-02-24 23:11","origin":"","prefix":"","projectLink":"https://github.com/gdutxiaoxu/AnchorTask","publishTime":1614179475000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1614179475000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"AnchorTask - Android 启动优化 ","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"yetel","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"EasyChat是一款开源的社交类的App。主要包含消息、好友、群组等相关的IM核心功能。部分界面参照了QQ、微信等相关社交APP。EasyChat APP采用MVVM模式构建。","descMd":"","envelopePic":"https://www.wanandroid.com/blogimgs/2efab4c3-4500-4980-ba31-0ca14098c6e0.png","fresh":false,"host":"","id":17387,"link":"https://www.wanandroid.com/blog/show/2943","niceDate":"2021-02-23 23:27","niceShareDate":"2021-02-23 23:27","origin":"","prefix":"","projectLink":"https://github.com/yetel/EasyChatAndroidClient","publishTime":1614094021000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1614094021000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"EasyChat是一款开源的社交类的App。主要包含消息、好友、群组等相关的IM核心功能","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"mouxuefei","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"kotlin版本组件化+mvvm项目架构","descMd":"","envelopePic":"https://wanandroid.com/resources/image/pc/default_project_img.jpg","fresh":false,"host":"","id":17371,"link":"https://www.wanandroid.com/blog/show/2941","niceDate":"2021-02-22 23:26","niceShareDate":"2021-02-22 23:26","origin":"","prefix":"","projectLink":"https://github.com/mouxuefei/MvvmModulePatternSample","publishTime":1614007611000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1614007611000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"kotlin版本组件化+mvvm项目架构","type":0,"userId":-1,"visible":1,"zan":0},{"apkLink":"","audit":1,"author":"Taonce","canEdit":false,"chapterId":294,"chapterName":"完整项目","collect":false,"courseId":13,"desc":"一款很简单的Flutter的学习项目，适合新手去熟悉Flutter的组件和Dart语法。","descMd":"","envelopePic":"https://www.wanandroid.com/blogimgs/6e207dde-1575-4a4a-be49-bd07777a5650.png","fresh":false,"host":"","id":17327,"link":"https://www.wanandroid.com/blog/show/2938","niceDate":"2021-02-19 23:04","niceShareDate":"2021-02-19 23:04","origin":"","prefix":"","projectLink":"https://github.com/Taonce/Gank_Flutter","publishTime":1613747086000,"realSuperChapterId":293,"selfVisible":0,"shareDate":1613747086000,"shareUser":"","superChapterId":294,"superChapterName":"开源项目主Tab","tags":[{"name":"项目","url":"/project/list/1?cid=294"}],"title":"Flutter练手项目：Gank_Flutter","type":0,"userId":-1,"visible":1,"zan":0}]
         * offset : 0
         * over : false
         * pageCount : 18
         * size : 15
         * total : 259
         */

        private int curPage;
        private int offset;
        private boolean over;
        private int pageCount;
        private int size;
        private int total;
        private List<DatasBean> datas;

        public int getCurPage() {
            return curPage;
        }

        public void setCurPage(int curPage) {
            this.curPage = curPage;
        }

        public int getOffset() {
            return offset;
        }

        public void setOffset(int offset) {
            this.offset = offset;
        }

        public boolean isOver() {
            return over;
        }

        public void setOver(boolean over) {
            this.over = over;
        }

        public int getPageCount() {
            return pageCount;
        }

        public void setPageCount(int pageCount) {
            this.pageCount = pageCount;
        }

        public int getSize() {
            return size;
        }

        public void setSize(int size) {
            this.size = size;
        }

        public int getTotal() {
            return total;
        }

        public void setTotal(int total) {
            this.total = total;
        }

        public List<DatasBean> getDatas() {
            return datas;
        }

        public void setDatas(List<DatasBean> datas) {
            this.datas = datas;
        }

        public static class DatasBean {
            /**
             * apkLink :
             * audit : 1
             * author : fuusy
             * canEdit : false
             * chapterId : 294
             * chapterName : 完整项目
             * collect : false
             * courseId : 13
             * desc : 该项目主要以组件化+Jetpack+MVVM为架构，使用Kotlin语言，集合了更新的Jetpack组件，如Navigation、Paging3、Room等，另外还加上了依赖注入框架Koin和图片加载框架Coin。
             网络请求部分使用OkHttp+Retrofit，配合Kotlin的协程，完成了对Retrofit和协程的请求封装，结合LoadSir进行状态切换管理
             * descMd :
             * envelopePic : https://www.wanandroid.com/resources/image/pc/default_project_img.jpg
             * fresh : true
             * host :
             * id : 18414
             * link : https://www.wanandroid.com/blog/show/3009
             * niceDate : 11小时前
             * niceShareDate : 11小时前
             * origin :
             * prefix :
             * projectLink : https://github.com/fuusy/wanandroid_jetpack_kt
             * publishTime : 1621868542000
             * realSuperChapterId : 293
             * selfVisible : 0
             * shareDate : 1621868542000
             * shareUser :
             * superChapterId : 294
             * superChapterName : 开源项目主Tab
             * tags : [{"name":"项目","url":"/project/list/1?cid=294"}]
             * title : 组件化+Jetpack+MVVM项目实战，涉及Jetpack相关组件，协程+Retrofit，Paging3+Room等
             * type : 0
             * userId : -1
             * visible : 1
             * zan : 0
             */

            private String apkLink;
            private int audit;
            private String author;
            private boolean canEdit;
            private int chapterId;
            private String chapterName;
            private boolean collect;
            private int courseId;
            private String desc;
            private String descMd;
            private String envelopePic;
            private boolean fresh;
            private String host;
            private int id;
            private String link;
            private String niceDate;
            private String niceShareDate;
            private String origin;
            private String prefix;
            private String projectLink;
            private long publishTime;
            private int realSuperChapterId;
            private int selfVisible;
            private long shareDate;
            private String shareUser;
            private int superChapterId;
            private String superChapterName;
            private String title;
            private int type;
            private int userId;
            private int visible;
            private int zan;
            private List<TagsBean> tags;

            public String getApkLink() {
                return apkLink;
            }

            public void setApkLink(String apkLink) {
                this.apkLink = apkLink;
            }

            public int getAudit() {
                return audit;
            }

            public void setAudit(int audit) {
                this.audit = audit;
            }

            public String getAuthor() {
                return author;
            }

            public void setAuthor(String author) {
                this.author = author;
            }

            public boolean isCanEdit() {
                return canEdit;
            }

            public void setCanEdit(boolean canEdit) {
                this.canEdit = canEdit;
            }

            public int getChapterId() {
                return chapterId;
            }

            public void setChapterId(int chapterId) {
                this.chapterId = chapterId;
            }

            public String getChapterName() {
                return chapterName;
            }

            public void setChapterName(String chapterName) {
                this.chapterName = chapterName;
            }

            public boolean isCollect() {
                return collect;
            }

            public void setCollect(boolean collect) {
                this.collect = collect;
            }

            public int getCourseId() {
                return courseId;
            }

            public void setCourseId(int courseId) {
                this.courseId = courseId;
            }

            public String getDesc() {
                return desc;
            }

            public void setDesc(String desc) {
                this.desc = desc;
            }

            public String getDescMd() {
                return descMd;
            }

            public void setDescMd(String descMd) {
                this.descMd = descMd;
            }

            public String getEnvelopePic() {
                return envelopePic;
            }

            public void setEnvelopePic(String envelopePic) {
                this.envelopePic = envelopePic;
            }

            public boolean isFresh() {
                return fresh;
            }

            public void setFresh(boolean fresh) {
                this.fresh = fresh;
            }

            public String getHost() {
                return host;
            }

            public void setHost(String host) {
                this.host = host;
            }

            public int getId() {
                return id;
            }

            public void setId(int id) {
                this.id = id;
            }

            public String getLink() {
                return link;
            }

            public void setLink(String link) {
                this.link = link;
            }

            public String getNiceDate() {
                return niceDate;
            }

            public void setNiceDate(String niceDate) {
                this.niceDate = niceDate;
            }

            public String getNiceShareDate() {
                return niceShareDate;
            }

            public void setNiceShareDate(String niceShareDate) {
                this.niceShareDate = niceShareDate;
            }

            public String getOrigin() {
                return origin;
            }

            public void setOrigin(String origin) {
                this.origin = origin;
            }

            public String getPrefix() {
                return prefix;
            }

            public void setPrefix(String prefix) {
                this.prefix = prefix;
            }

            public String getProjectLink() {
                return projectLink;
            }

            public void setProjectLink(String projectLink) {
                this.projectLink = projectLink;
            }

            public long getPublishTime() {
                return publishTime;
            }

            public void setPublishTime(long publishTime) {
                this.publishTime = publishTime;
            }

            public int getRealSuperChapterId() {
                return realSuperChapterId;
            }

            public void setRealSuperChapterId(int realSuperChapterId) {
                this.realSuperChapterId = realSuperChapterId;
            }

            public int getSelfVisible() {
                return selfVisible;
            }

            public void setSelfVisible(int selfVisible) {
                this.selfVisible = selfVisible;
            }

            public long getShareDate() {
                return shareDate;
            }

            public void setShareDate(long shareDate) {
                this.shareDate = shareDate;
            }

            public String getShareUser() {
                return shareUser;
            }

            public void setShareUser(String shareUser) {
                this.shareUser = shareUser;
            }

            public int getSuperChapterId() {
                return superChapterId;
            }

            public void setSuperChapterId(int superChapterId) {
                this.superChapterId = superChapterId;
            }

            public String getSuperChapterName() {
                return superChapterName;
            }

            public void setSuperChapterName(String superChapterName) {
                this.superChapterName = superChapterName;
            }

            public String getTitle() {
                return title;
            }

            public void setTitle(String title) {
                this.title = title;
            }

            public int getType() {
                return type;
            }

            public void setType(int type) {
                this.type = type;
            }

            public int getUserId() {
                return userId;
            }

            public void setUserId(int userId) {
                this.userId = userId;
            }

            public int getVisible() {
                return visible;
            }

            public void setVisible(int visible) {
                this.visible = visible;
            }

            public int getZan() {
                return zan;
            }

            public void setZan(int zan) {
                this.zan = zan;
            }

            public List<TagsBean> getTags() {
                return tags;
            }

            public void setTags(List<TagsBean> tags) {
                this.tags = tags;
            }

            public static class TagsBean {
                /**
                 * name : 项目
                 * url : /project/list/1?cid=294
                 */

                private String name;
                private String url;

                public String getName() {
                    return name;
                }

                public void setName(String name) {
                    this.name = name;
                }

                public String getUrl() {
                    return url;
                }

                public void setUrl(String url) {
                    this.url = url;
                }

                @Override
                public String toString() {
                    return "TagsBean{" +
                            "name='" + name + '\'' +
                            ", url='" + url + '\'' +
                            '}';
                }
            }

            @Override
            public String toString() {
                return "DatasBean{" +
                        "apkLink='" + apkLink + '\'' +
                        ", audit=" + audit +
                        ", author='" + author + '\'' +
                        ", canEdit=" + canEdit +
                        ", chapterId=" + chapterId +
                        ", chapterName='" + chapterName + '\'' +
                        ", collect=" + collect +
                        ", courseId=" + courseId +
                        ", desc='" + desc + '\'' +
                        ", descMd='" + descMd + '\'' +
                        ", envelopePic='" + envelopePic + '\'' +
                        ", fresh=" + fresh +
                        ", host='" + host + '\'' +
                        ", id=" + id +
                        ", link='" + link + '\'' +
                        ", niceDate='" + niceDate + '\'' +
                        ", niceShareDate='" + niceShareDate + '\'' +
                        ", origin='" + origin + '\'' +
                        ", prefix='" + prefix + '\'' +
                        ", projectLink='" + projectLink + '\'' +
                        ", publishTime=" + publishTime +
                        ", realSuperChapterId=" + realSuperChapterId +
                        ", selfVisible=" + selfVisible +
                        ", shareDate=" + shareDate +
                        ", shareUser='" + shareUser + '\'' +
                        ", superChapterId=" + superChapterId +
                        ", superChapterName='" + superChapterName + '\'' +
                        ", title='" + title + '\'' +
                        ", type=" + type +
                        ", userId=" + userId +
                        ", visible=" + visible +
                        ", zan=" + zan +
                        ", tags=" + tags +
                        '}';
            }
        }

        @Override
        public String toString() {
            return "DataBean{" +
                    "curPage=" + curPage +
                    ", offset=" + offset +
                    ", over=" + over +
                    ", pageCount=" + pageCount +
                    ", size=" + size +
                    ", total=" + total +
                    ", datas=" + datas +
                    '}';
        }
    }

    @Override
    public String toString() {
        return "JsonBean{" +
                "data=" + data +
                ", errorCode=" + errorCode +
                ", errorMsg='" + errorMsg + '\'' +
                '}';
    }
}


/**
 * OkHttp3请求
 */
def client = new OkHttpClient();
def request = new Request.Builder().url("https://api.github.com/users/Guolei1130").build()
JsonSlurper slurper = new JsonSlurper()
/**
 * Retrofit请求
 */
def retrofit = new Retrofit.Builder()
        .baseUrl("https://www.wanandroid.com/")
        .addConverterFactory(GsonConverterFactory.create())
        .build()
GitHubService service = retrofit.create(GitHubService.class)
Call<ResponseBody> stringCall = service.getString(1)
Call<ResponseBody> stringCall2 = service.getString(2)
Call<ResponseBody> stringCall3 = service.getString(3)

//分组归类
def TASK_GROUP = 'httprequest'

task runHttp() {
    group(TASK_GROUP)
    doFirst {
        def response = client.newCall(request).execute()
        def result = response.body().string()
        response.close()
        //解析json字符串

        LoginBean jsonStr = slurper.parseText(result)
        println("实例对象：" + jsonStr)
    }

    doLast {
        def respon = stringCall.execute();
        JsonBean bean1 = slurper.parseText(respon.body().string())
        println("输出第一页：" +bean1.toString())

        def respon2 = stringCall2.execute();
        JsonBean bean2 = slurper.parseText(respon2.body().string())
        println("输出第二页：" +bean2.toString())

        def respon3 = stringCall3.execute();
        JsonBean bean3 = slurper.parseText(respon3.body().string())
        println("输出第三页：" +bean3.toString())
    }
}


